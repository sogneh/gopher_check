Performance:


9/26/14 PerftParallel()
  12.7224 m NPS
  119601101 nodes at depth 6. 
  33731 total nodes in check
  2886936 total capture nodes
  9299 total goroutines spawned

10/27/14

Total nodes searched: 138.0991 m
Total score: 278/300
8 ABF: 2.9258

10/28/14

Total nodes searched: 985.2459 m
Total score: 290/300
10 ABF: 2.9052

10/30/14

Total nodes searched: 109.6689 m
Total score: 277/300
8 ABF: 2.8568

Total nodes searched: 915.6214 m
Total score: 288/300
10 ABF: 2.9028

10/31/14

Total nodes searched: 106.1947 m
Total score: 277/300
8 ABF: 2.8389

11/4/14

Total nodes searched: 102.2577 m
Total score: 285/300
8 ABF: 2.4326


11/10/14

Total nodes searched: 100.8826 m
Total score: 286/300
8 ABF: 2.4297

Total nodes searched: 100.3758 m
Total score: 285/300
8 ABF: 2.4257

4/9/15

Total nodes searched: 95.4267 m
Total score: 287/300
8 ABF: 2.4381

Debugging:

Search refactoring:

  -Create MoveSelector type to coordinate batched move generation across workers. 
  Send ordered moves via channel.

  -Move shared memory into SplitPoint struct to reduce communication costs.
  -Move responsibility for repetition list, pv into explicit stack.



To Do:

Improve Selectivity:
  -Track static evaluation in main tree.  Use LMR and Futility Pruning only when static eval 
  for side to move is decreasing.

Implement Pondering.

Improve Pawn Evaluation - 
  Separate out hashable elements of pawn evaluation (elements that depend only on other pawns).
  Implement Pawn Hashtable.  Update Make/Unmake.


Ideas:

Disable boundary checking on compile?  Could improve execution speed significantly given the amount of 
array access.  Only do this once engine is finalized and thoroughly debugged.





